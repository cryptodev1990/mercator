"""Add personal marker for organizations

Revision ID: 3f45b1d4e2a5
Revises: 2b3e1bed3adf
Create Date: 2022-08-10 20:51:13.857310

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3f45b1d4e2a5'
down_revision = '2b3e1bed3adf'
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.add_column('organizations', sa.Column('is_personal', sa.Boolean(), nullable=True))
    conn = op.get_bind()
    conn.execute(sa.text("""
        DROP TRIGGER users_insert_trigger ON users;
        DROP FUNCTION create_default_organization;

        CREATE FUNCTION create_default_organization()
          RETURNS trigger AS
          $_$
          DECLARE
            new_organization_id UUID;
          BEGIN
            INSERT INTO organizations (name, created_at, updated_at, is_personal) VALUES
              (
                COALESCE(NEW."nickname" || ' Workspace', NEW.email || ' - Default Workspace'),
                NOW(),
                NOW(),
                TRUE
              ) RETURNING id INTO new_organization_id;
            INSERT INTO organization_members (organization_id, created_at, updated_at, user_id, has_write, has_read, is_admin, active) VALUES (new_organization_id, NOW(), NOW(), NEW."id", TRUE, TRUE, TRUE, TRUE);
            RETURN NEW;
          END;
        $_$
        LANGUAGE 'plpgsql';

        CREATE TRIGGER users_insert_trigger
          AFTER INSERT ON "users"
            FOR EACH ROW
            EXECUTE PROCEDURE create_default_organization();
    """))


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('organizations', 'is_personal')
    conn = op.get_bind()
    conn.execute(sa.text("""
        DROP TRIGGER users_insert_trigger ON users;
        DROP FUNCTION create_default_organization;

        CREATE FUNCTION create_default_organization()
          RETURNS trigger AS
          $_$
          DECLARE
            new_organization_id UUID;
          BEGIN
            INSERT INTO organizations (name, created_at, updated_at) VALUES
              (
                COALESCE(NEW."nickname" || ' Workspace', NEW.email || ' - Default Workspace'),
                NOW(),
                NOW()
              ) RETURNING id INTO new_organization_id;
            INSERT INTO organization_members (organization_id, created_at, updated_at, user_id, has_write, has_read, is_admin) VALUES (new_organization_id, NOW(), NOW(), NEW."id", TRUE, TRUE, TRUE);
            RETURN NEW;
          END;
        $_$
        LANGUAGE 'plpgsql';

        CREATE TRIGGER users_insert_trigger
          AFTER INSERT ON "users"
            FOR EACH ROW
            EXECUTE PROCEDURE create_default_organization();
        """))
