"""Update update_geom_from_geojson

Revision ID: bc40f90c6f58
Revises: 0b14e3fc512e
Create Date: 2022-10-10 14:42:40.065586

"""
from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision = 'bc40f90c6f58'
down_revision = '0b14e3fc512e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_update_geom_from_geojson = PGFunction(
        schema="public",
        signature="update_geom_from_geojson()",
        definition="RETURNS trigger\nLANGUAGE plpgsql\nAS $function$\nBEGIN\n    UPDATE shapes\n    SET geom = ST_GeomFromGeoJson(geojson['geometry'])\n    , properties = geojson['properties']\n    , name = geojson['name']\n    WHERE 1=1\n    AND uuid = NEW.uuid\n    ;\n    RETURN NEW;\nEND;\n$function$"
    )
    op.replace_entity(public_update_geom_from_geojson)

    public_add_geom_from_geojson = PGFunction(
        schema="public",
        signature="add_geom_from_geojson()",
        definition="RETURNS trigger\n    LANGUAGE plpgsql\n    AS $function$\n        BEGIN\n            UPDATE shapes\n            SET\n                geom = ST_GeomFromGeoJson(geojson['geometry'])\n                , properties = geojson['properties']\n                , name = geojson['name']\n            WHERE 1=1\n                AND uuid = NEW.uuid\n            ;\n            RETURN NEW;\n        END;\n    $function$"
    )
    op.replace_entity(public_add_geom_from_geojson)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_add_geom_from_geojson = PGFunction(
        schema="public",
        signature="add_geom_from_geojson()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\n          BEGIN\n            UPDATE shapes\n            SET\n              geom = ST_GeomFromGeoJson(geojson['geometry'])\n              , properties = geojson['properties']\n              WHERE 1=1\n                AND uuid = NEW.uuid\n            ;\n            RETURN NEW;\n          END;\n        $function$"
    )
    op.replace_entity(public_add_geom_from_geojson)
    public_update_geom_from_geojson = PGFunction(
        schema="public",
        signature="update_geom_from_geojson()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\n          BEGIN\n             UPDATE shapes\n             SET geom = ST_GeomFromGeoJson(geojson['geometry'])\n             , properties = geojson['properties']\n             WHERE 1=1\n               AND uuid = NEW.uuid\n             ;\n             RETURN NEW;\n          END;\n          $function$"
    )
    op.replace_entity(public_update_geom_from_geojson)
    # ### end Alembic commands ###
