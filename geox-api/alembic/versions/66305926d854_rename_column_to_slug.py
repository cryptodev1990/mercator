"""Rename column to slug

Revision ID: 66305926d854
Revises: 971512274734
Create Date: 2022-10-17 21:34:04.743500

"""
from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction


# revision identifiers, used by Alembic.
revision = "66305926d854"
down_revision = "971512274734"
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.drop_column("namespaces", "is_default")
    # Update the Slug column
    op.add_column(
        "namespaces",
        sa.Column(
            "slug",
            sa.String(),
            nullable=True,
            comment="Normalized namespace name. This is preprocessed prior to being inserted.\nUniqueness of names is determined by this and not by `name`.",
        ),
    )
    # Fill in slugs
    conn = op.get_bind()
    conn.execute(
        sa.text(
            """
            UPDATE namespaces
            SET slug = regexp_replace(name_normalized, '[^a-z0-9_-]', '-')
            """
        )
    )
    op.alter_column("namespaces", "slug", nullable=False)
    op.add_column(
        "namespaces",
        sa.Column(
            "is_default",
            sa.Boolean(),
            sa.Computed(
                "slug = 'default'",
            ),
            nullable=False,
        ),
    )
    op.create_check_constraint(
        op.f("ck_namespaces_slug_is_valid"),
        "namespaces",
        "slug SIMILAR TO '[a-z0-9_-]+'",
    )

    op.drop_index("ix_namespaces_name_normalized", table_name="namespaces")
    op.drop_index("ix_unique_organization_name", table_name="namespaces")
    op.create_index(op.f("ix_namespaces_slug"), "namespaces", ["slug"], unique=False)
    op.create_index(
        "ix_unique_organization_slug",
        "namespaces",
        ["organization_id", "slug"],
        unique=True,
        postgresql_where=sa.text("deleted_at IS NULL"),
    )
    op.create_table_comment(
        "namespaces",
        "A Namespace is a collection of shapes.\n\n    - Each shape is in one namespace.\n    - All organizations should have a 'Default' namespace.",
        schema=None,
    )
    op.drop_column("namespaces", "name_normalized")

    public_create_default_namespace = PGFunction(
        schema="public",
        signature="create_default_namespace()",
        definition="returns trigger\n    LANGUAGE plpgsql\n    AS $function$\n        DECLARE\n            new_organization_id UUID;\n        BEGIN\n            INSERT INTO namespaces (name, slug, organization_id)\n            VALUES\n            ('Default', 'default', NEW.id);\n\n            RETURN NEW;\n        END;\n    $function$",
    )
    op.replace_entity(public_create_default_namespace)


def downgrade() -> None:
    op.drop_constraint(op.f("ck_namespaces_slug_is_valid"), "namespaces")
    op.drop_column("namespaces", "is_default")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "namespaces",
        sa.Column(
            "name_normalized",
            sa.VARCHAR(),
            autoincrement=False,
            comment="Normalized namespace name. This is preprocessed prior to being inserted.\n                Uniqueness of names is determined by this and not by `name`.",
        ),
    )
    conn = op.get_bind()
    conn.execute(
        sa.text(
            """
        UPDATE namespaces
        SET name_normalized = slug
        """
        )
    )
    op.alter_column("namespaces", "name_normalized", nullable=False)
    op.add_column(
        "namespaces",
        sa.Column(
            "is_default",
            sa.Boolean(),
            sa.Computed(
                "name_normalized = 'default'",
            ),
            nullable=False,
        ),
    )

    op.create_table_comment(
        "namespaces",
        "A Namespace is a collection of shapes.\n\n    - Each shape is in one namespace.\n    - All organizations should have a 'Default' namespace.\n    ",
        schema=None,
    )
    op.drop_index(
        "ix_unique_organization_slug",
        table_name="namespaces",
        postgresql_where=sa.text("deleted_at IS NULL"),
    )
    op.drop_index(op.f("ix_namespaces_slug"), table_name="namespaces")
    op.create_index(
        "ix_unique_organization_name",
        "namespaces",
        ["organization_id", "name_normalized"],
        unique=False,
    )
    op.create_index(
        "ix_namespaces_name_normalized", "namespaces", ["name_normalized"], unique=False
    )
    op.drop_column("namespaces", "slug")

    public_create_default_namespace = PGFunction(
        schema="public",
        signature="create_default_namespace()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\n        DECLARE\n            new_organization_id UUID;\n        BEGIN\n            INSERT INTO namespaces (name, name_normalized, organization_id)\n            VALUES\n            ('Default', 'default', NEW.id);\n\n            RETURN NEW;\n        END;\n    $function$",
    )
    op.replace_entity(public_create_default_namespace)
