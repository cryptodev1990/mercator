"""Update update_geom_from_geojson

Revision ID: 22c3030021c3
Revises: bc40f90c6f58
Create Date: 2022-10-10 21:25:29.960567

"""
from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision = "22c3030021c3"
down_revision = "bc40f90c6f58"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    conn = op.get_bind()
    conn.execute(
        sa.text(
            """
            UPDATE shapes
            SET name = geojson #>> '{properties,name}';
            """
        )
    )

    public_update_geom_from_geojson = PGFunction(
        schema="public",
        signature="update_geom_from_geojson()",
        definition="RETURNS trigger\nLANGUAGE plpgsql\nAS $function$\nBEGIN\n    UPDATE shapes\n    SET geom = ST_GeomFromGeoJson(geojson['geometry'])\n    , properties = geojson['properties']\n    , name = geojson #>> '{properties,name}'\n    WHERE 1=1\n    AND uuid = NEW.uuid\n    ;\n    RETURN NEW;\nEND;\n$function$",
    )
    op.replace_entity(public_update_geom_from_geojson)

    public_add_geom_from_geojson = PGFunction(
        schema="public",
        signature="add_geom_from_geojson()",
        definition="RETURNS trigger\n    LANGUAGE plpgsql\n    AS $function$\n        BEGIN\n            UPDATE shapes\n            SET\n                geom = ST_GeomFromGeoJson(geojson['geometry'])\n                , properties = geojson['properties']\n                , name = geojson #>> '{properties,name}'\n            WHERE 1=1\n                AND uuid = NEW.uuid\n            ;\n            RETURN NEW;\n        END;\n    $function$",
    )
    op.replace_entity(public_add_geom_from_geojson)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_add_geom_from_geojson = PGFunction(
        schema="public",
        signature="add_geom_from_geojson()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\n        BEGIN\n            UPDATE shapes\n            SET\n                geom = ST_GeomFromGeoJson(geojson['geometry'])\n                , properties = geojson['properties']\n                , name = geojson['name']\n            WHERE 1=1\n                AND uuid = NEW.uuid\n            ;\n            RETURN NEW;\n        END;\n    $function$",
    )
    op.replace_entity(public_add_geom_from_geojson)
    public_update_geom_from_geojson = PGFunction(
        schema="public",
        signature="update_geom_from_geojson()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    UPDATE shapes\n    SET geom = ST_GeomFromGeoJson(geojson['geometry'])\n    , properties = geojson['properties']\n    , name = geojson['name']\n    WHERE 1=1\n    AND uuid = NEW.uuid\n    ;\n    RETURN NEW;\nEND;\n$function$",
    )
    op.replace_entity(public_update_geom_from_geojson)
    # ### end Alembic commands ###
