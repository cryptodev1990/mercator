# Command runner for Mercator backend
# This is a [justfile](https://github.com/casey/juste)

# set the default shell (to be safe)
set shell := ["bash", "-uc"]

# Assumes that local environment
set dotenv-load

default:
	@just --list

# Build docker container
docker-build:
	docker-compose build

# Run Docker container
docker-run: docker-build
	# Run the production container
	docker-compose up

# Connect to local docker
docker-connect: ## Connect to local docker
	docker-compose exec app bash

# Install dependencies for local development
dev-install:  ## Install dependencies for local development
	./bin/install-dependencies-local.sh

# Run app locally
dev:  ## Run app locally
	overmind start

# Format files in the project
format: ## Format files in the project
	./bin/format.sh

# Lint the project
lint: ## Lint the project
	./bin/lint.sh

# Deploy the project to flyctl
deploy: ## Deploy the project to flyctl
	test `command -v flyctl` || (echo "\033[31m Please install flyctl from fly.io" && exit -1);
	flyctl deploy

# Run tests
test *FLAGS=".":
	./bin/test.sh {{ FLAGS }}

# Revise database with alembic
db-revision: ## Revise database with alembic
	alembic revision --autogenerate -m "Add users and shapes"

# Upgrade database schema with alembic
db-upgrade:  ## Upgrade database schema with alembic
	alembic upgrade head

# Connect to running local postgres database
pg: ## Connect to running local postgres database
	pgcli -p5432 "geox"

# Connect to running local postgres database
pg-osm: ## Connect to running local postgres database
	pgcli -p5432 "osm" -u "osmuser"

# Run an interactive shell for the project
shell:  ## Run an interactive shell for the project
	ipython

# Get access token for Auth0 API, useful for using the Swagger docs generated by FastAPI
access-token:
	python -c "from app.core.access_token import get_access_token; print(get_access_token())" | pbcopy;
	@echo Access token copied to clipboard

# Run an interactive shell for the project
ssh:
	fly ssh console
