# Command runner for Mercator backend
# This is a [justfile](https://github.com/casey/juste)

# set the default shell (to be safe)
set shell := ["zsh", "-uc"]

venv := 'env'
source_venv := 'source ' + venv + '/bin/activate'

git_commit_hash := `git rev-parse HEAD`

default:
	@just --list

test +ARGS='--cov=app test':
	#!/bin/zsh
	{{ source_venv }}
	pytest {{ ARGS }}

run:
	#!/bin/zsh
	{{ source_venv }}
	./start.sh

lint:
	#!/bin/zsh
	{{ source_venv }}
	python -m mypy .
	python -m pylintpython -m

format:
	#!/bin/zsh
	{{ source_venv }}
	set -x
	python -m isort --quiet .
	python -m black .

# Create and update a new local OSM database
db-local db input_file *args:
	createdb {{ db }}
	psql {{ db }} -c "CREATE EXTENSION postgis;"
	osm2pgsql -d {{ db }} -O flex -S ./osm-docker/style.lua {{ args }} {{ input_file }}
	psql {{ db }} -f ./osm-docker/docker-entrypoint-initdb.d/30_post-import.sql
	psql {{ db }} -f ./osm-docker/docker-entrypoint-initdb.d/41_cardinal_direction.sql
	psql {{ db }} -f ./osm-docker/docker-entrypoint-initdb.d/42_create_function_to_geojson_feature.sql
	psql {{ db }} -f ./osm-docker/docker-entrypoint-initdb.d/43_create_function_to_geojson_feature_collection.sql
	psql {{ db }} -f ./osm-docker/docker-entrypoint-initdb.d/50_trgm.sql
	psql {{ db }} -f ./osm-docker/docker-entrypoint-initdb.d/90_analyze.sql

# Create and update a new local OSM database
install-deps:
	#!/bin/zsh
	set -e
	if [[ ! -d .venv ]]; then
		python3 -m venv {{ venv }}
	fi
	{{ source_venv }}
	pip install --upgrade pip wheel
	pip install -r requirements.txt
	pip install -r requirements-dev.txt
